[metadata]
name = space_ranger
version = attr: space_ranger.__version__
author = kira607
author_email = kirill.lesckin@gmail.com
url = https://github.com/kira607/space-ranger
description = A simple game in which you play as a pilot of a spaceship and fight other ships.
long_description = file: README.md
long_description_content_type = text/markdown
classifiers =
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.12

[options]
zip_safe = false
include_package_data = true
python_requires = >=3.12
package_dir =
    =src
packages = find:
test_suite = tests
setup_requires =
    setuptools>=67.2.0
install_requires =
    pygame
    numpy

[options.package_data]
space_ranger = py.typed

[options.packages.find]
where = src

[options.extras_require]
dev =
    # testing
    pytest
    pytest-mock
    pytest-cov

    # linting
    flake8
    flake8-annotations
    flake8-broken-line
    flake8-bugbear
    flake8-builtins
    flake8-comprehensions
    flake8-docstrings
    flake8-eradicate
    flake8-isort
    flake8-mutable
    flake8-pep3101
    flake8-plugin-utils
    flake8-polyfill
    flake8-print
    flake8-quotes
    flake8-return
    flake8-simplify
    flake8-use-fstring

    # formatting
    black
    isort

    # mypy and stubs
    mypy

    # other
    pep8-naming
    tox
    pre-commit
    snakeviz

[bdist_wheel]
universal = true

[sdist]
formats = zip, gztar

[coverage:report]
show_missing = true
exclude_lines =
    pragma: no cover
    if False
    # @abc.abstractmethod
    # @abc.abstractproperty
    # raise NotImplementedError
    # return NotImplemented
    # except ImportError
    # raise MemoryError
    # if __name__ == .__main__.:
    # if typing.TYPE_CHECKING:

[green]
file-pattern = test_*.py
verbose = 2
no-skip-report = true
quiet-stdout = true
run-coverage = true

[pydocstyle]
match-dir = (?!tests)(?!resources)(?!docs)[^\.].*
match = (?!test)(?!setup)[^\._].*\.py
inherit = false
ignore = D200, D203, D213, D406, D407   # Google conventions

[isort]
skip =
        build/,
        dist/,
        docs/,
        .git,
        .eggs,
        __pycache__,
        *.egg-info,
        .gitignore,
        README.md,
        scratches/
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
py_version = 312
line_length = 120
multi_line_output = 3
include_trailing_comma = true
lines_after_imports = 2

[flake8]
max-line-length = 120
doctests = True
per-file-ignores =
    *__init__.py:F401
count = true
exclude =
        .venv/,
        build/,
        dist/,
        docs/,
        .git,
        .eggs,
        __pycache__,
        *.egg-info,
        .gitignore,
        README.md,
        scratches/*
ignore =
        # Missing type annotation for self in method
        ANN101
        # Missing type annotation for cls in classmethod
        ANN102
        # Missing type annotation for *args
        ANN002
        # Missing type annotation for **kwargs
        ANN003
        # you shouldn`t assign value to variable if it will be use only as return value
        ANN401
        R504
        # Line break occurred before a binary operator
        W503
        # Missing docstring in public module
        D100
        # Use """triple double quotes"""
        D300
        # Missing docstring in __init__
        D107
        # Found commented out code
        E800
inline-quotes = "
multiline-quotes = """
docstring-quotes = """
